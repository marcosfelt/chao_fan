name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    
concurrency:
  # Use github.run_id on main branch
  # Use github.event.pull_request.number on pull requests, so it's unique per pull request
  # Use github.ref on other branches, so it's unique per branch
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # Linting
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install ruff
      run: pip install ruff
    - name: Run ruff
      run: ruff .

  # Build the package
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install poetry
      uses: Gr1N/setup-poetry@v9

    - name: Build package
      run: poetry build

    - name: Save built package
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 1

  # Run pytest using built package
  test:
    needs: [build, lint]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        cache: 'pip'
        cache-dependency-path: "poetry.lock"

    - name: Download built package
      uses: actions/download-artifact@v4
      with:
        name: dist
    
    - name: Install package and pytest
      shell: bash
      run: |
        WHL_NAME=$(ls chao_fan-*.whl)
        pip install ${WHL_NAME} pytest pytest-mock

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - name: Deploy to production
      if: github.ref == 'refs/heads/main'
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:        
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}
